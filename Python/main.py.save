
from gopigo import *
import time,math
from grovepi import *
import os #pour PushBullet
#main a recuperer sur le pc qui va appeler calculerRestantSopalin()

	

def calculerRestantSopalin():
	while True:
		ultrasonic_ranger = 4
		valeurCapteur = 1
		try:
			valeurCapteur = ultrasonicRead(ultrasonic_ranger) #mettre notre fonction capteur
		except TypeError:
			print "Error"
		
		distanceCapteurRouleau = 30 #valeur constante a calculer
		ChangerCouleur(valeurCapteur)
		if(valeurCapteur < distanceCapteurRouleau):
			print("peut derouler")
			coef = CalculerCoef(valeurCapteur,distanceCapteurRouleau)
			#DeroulerFeuille(coef);
			ChangerCouleur(valeurCapteur)
		else:
			print("peut pas derouler")



def ChangerCouleur(distance):
	ledVerte= 2
	ledRouge= 3
	ledOrange= 4
	distanceSopalinInit= 5#valeur rouleau plein
	#print(distance)
	pourcentageRestant=((distance)*100)/distanceSopalinInit
	print pourcentageRestant
	if(pourcentageRestant > 50):
		digitalWrite(ledVerte,1)
		digitalWrite(ledOrange,0)
		digitalWrite(ledRouge,0)
	
	elif(pourcentageRestant > 10):
		digitalWrite(ledVerte,0)
		digitalWrite(ledOrange,1)
		digitalWrite(ledRouge,0)
	else:
	        #os.system('../pushbullet.sh "Attention il vous reste plus beaucoup de papiers "')
		digitalWrite(ledVerte,0)
		digitalWrite(ledOrange,0)
 		digitalWrite(ledRouge,1)



def CalculerCoef(valeurCapteur,distanceCapteurRouleau):
	L = 1 #longeur d'une feuille
	D = 1 #largeur d'un rouleur vide + (distanceCapteurRouleau - valeurCapteur)*2
	perimetre = math.pi*D
	return (L/perimetre)*360

def DeroulerFeuille(coef):
	
	for i in range(coef):
	
		print i
		time.sleep(.01)



calculerRestantSopalin()

		


